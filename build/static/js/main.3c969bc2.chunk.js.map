{"version":3,"sources":["components/whether.component.jsx","components/form.component.jsx","App.js","index.js"],"names":["Whether","props","className","city","weathericon","temp_celsius","min","max","minmaxtemp","temp_min","temp_max","description","Form","error","row","onSubmit","loadweather","type","name","autoComplete","placeholder","App","getWeather","e","a","preventDefault","target","elements","value","country","fetch","api_call","json","response","console","log","setState","sys","celsius","calCelsius","main","temp","weather","get_Weathericon","id","state","undefined","icon","ThunderStorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","Math","floor","icons","rangeID","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c969bc2.chunk.js","sourcesContent":["import React from 'react';\nimport './form.style.css';\n\nconst Whether =(props)=>{\n    return (\n        <div className=\"container text-primary custom-font-class \">\n            <div className=\"cards pt-4\">\n                <h1 className=\"display-4\" > {props.city}</h1>\n                <h5 className=\"py-4\">\n                    <i className={`wi ${props.weathericon} display-1 `} />\n                </h5>\n                {props.temp_celsius ? <h1 className=\"py-2 display-3 \"> {props.temp_celsius}&deg;</h1> : null}\n                \n                {/* showing max and min temperatures */}\n                {minmaxtemp(props.temp_min, props.temp_max)}\n                <h4 className=\"py-3 display-2 text-info text-capitalize \"> {props.description} </h4>\n            </div>\n        </div>\n    );\n}\n\n\n\nfunction minmaxtemp(min, max) {\n    \n    if (min && max) {\n        return (\n            <h3>\n                <span className=\"px-4 display-3 text-warning \">{min}&deg;</span>\n                <span className=\"px-4 display-3 text-warning \">{max}&deg;</span>\n            </h3>\n        );\n    }\n}\n \nexport default Whether","import React from 'react';\nimport './form.style.css';\n\nconst Form = props => {\n    return (\n        <div className=\"container\">\n            <div> {props.error? error(): null } </div>\n            <form onSubmit={props.loadweather}>\n            <div className=\"row\">\n                <div className=\"col-md-3 offset-md-2\">\n                    <input type=\"text\" className=\"form-control\" name=\"city\" autoComplete=\"off\" placeholder=\"City\" />\n                </div>\n                <div className=\"col-md-3\">\n                    <input type=\"text\" className=\"form-control\" name=\"country\" autoComplete=\"off\" placeholder=\"Country\" />\n                </div>\n                <div className=\"col-md-3 mt-md-0 py-2 text-md-left\">\n                    <button className=\"btn btn-warning\">Get Weather</button>\n                </div>\n            </div>\n            </form>\n        </div>\n    )\n    \n}\n\n\nfunction error() {\n    return (\n          <div className=\"alert alert-danger mx-5\" row=\"alert\" >\n            Please Enter City and Country\n          </div>\n    );\n  }\n\nexport default Form; \n","import React from 'react';\nimport './App.css';\nimport 'weather-icons/css/weather-icons.css';\nimport  'bootstrap/dist/css/bootstrap.min.css';\nimport Whether from './components/whether.component';\nimport Form from './components/form.component';\n\nconst APIKEY = \"c92ed0af42e526eeb37764db5d2d8a1d\";\n\n\nclass App extends React.Component {   //else import {Component as well} to avoid React.Component\n\n    constructor(){\n      super();\n\n      this.state={\n        city:undefined,\n        country: undefined,\n        icon: undefined,\n        main: undefined,\n        celsius: undefined,\n        temp_max:undefined,\n        temp_min:undefined,\n        description: \"\",\n        error: false\n\n      };\n      \n\n      this.weathericon = {\n        ThunderStorm:\"wi-thunderstorm\",\n        Drizzle: \"wi-sleet\",\n        Rain: \"wi-storm-showers\",\n        Snow: \"wi-snow\",\n        Atmosphere: \"wi-fog\",\n        Clear: \"wi-day-sunny\",\n        Clouds:\"wi-day-sunny\"\n      }\n    }\n\n    calCelsius(temp){\n      let cell=Math.floor(temp-273.15);\n      return cell;\n    }\n  \n  get_Weathericon(icons, rangeID) {\n    switch (true) {\n      case rangeID >= 200 && rangeID <= 232:\n        this.setState({ icon: this.weathericon.ThunderStorm });\n        break;\n      case rangeID >= 300 && rangeID <= 321:\n        this.setState({ icon: this.weathericon.Drizzle });\n      break;\n      case rangeID >= 500 && rangeID <= 531:\n        this.setState({ icon: this.weathericon.Rain });\n      break;\n      case rangeID >= 600 && rangeID <= 622:\n        this.setState({ icon: this.weathericon.Snow });\n        break;\n      case rangeID >= 701 && rangeID <= 781:\n        this.setState({ icon: this.weathericon.Atmosphere });\n        break;\n      case rangeID ===800:\n        this.setState({ icon: this.weathericon.Clear });\n        break;\n       \n      default:\n        this.setState({ icon: this.weathericon.Clear });\n      \n    }\n  }\n\n  getWeather = async (e) => {\n      \n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    if (city && country) {\n  \n      const api_call = await fetch(\n        `http://api.openweathermap.org/data/2.5/weather?q=${city},${country} &appid=${APIKEY}`);\n        const response= await api_call.json();\n  \n        console.log(response);\n  \n        this.setState({\n          city: `${response.name}, ${response.sys.country} `,\n          country: response.sys.country,\n          celsius: this.calCelsius(response.main.temp),\n          temp_max: this.calCelsius(response.main.temp_max),\n          temp_min: this.calCelsius(response.main.temp_min),\n          description: response.weather[0].description,\n          error: false\n        });\n        this.get_Weathericon(this.weathericon, response.weather[0].id);  \n\n\n    }\n  \n    else {\n      this.setState({ error: true });\n    }\n\n    };\n\n  render() { \n    return ( \n      <div className=\"App\">\n      <Form loadweather={this.getWeather} error={this.state.error} />\n      <Whether \n      city={this.state.city}\n      country={this.state.country} \n      temp_celsius={this.state.celsius} \n      temp_max={this.state.temp_max}\n      temp_min={this.state.temp_min}\n      description={this.state.description}\n      weathericon={this.state.icon}\n      \n      \n      />\n    </div>\n     );\n  }\n}\n \n\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}