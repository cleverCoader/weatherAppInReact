{"ast":null,"code":"var _jsxFileName = \"/home/sam/Documents/Reactor/React1/NEW-WHETHER-APP/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Whether from './components/whether.component';\nimport Form from './components/form.component';\n\nclass App extends React.Component {\n  //else import {Component as well} to avoid React.Component\n  constructor() {\n    super();\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country} &appid=c92ed0af42e526eeb37764db5d2d8a1d`);\n      const response = await api_call.json();\n\n      if (city && country) {\n        console.log(response);\n        this.setState({\n          city: `${response.name}, ${response.sys.country} `,\n          country: response.sys.country,\n          celsius: this.calCelsius(response.main.temp),\n          temp_max: this.calCelsius(response.main.temp_max),\n          temp_min: this.calCelsius(response.main.temp_min),\n          description: response.weather[0].description,\n          error: false\n        });\n        this.get_WeatherIcon(this.weathericon, response.weather[0].id);\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.weathericon = {\n      ThunderStorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  get_WeatherIcon(icons, rangeID) {\n    switch (true) {\n      case rangeID >= 200 && rangeID <= 232:\n        this.setState({\n          icon: this.weathericon.ThunderStorm\n        });\n        break;\n\n      case rangeID >= 300 && rangeID <= 321:\n        this.setState({\n          icon: this.weathericon.Drizzle\n        });\n        break;\n\n      case rangeID >= 500 && rangeID <= 531:\n        this.setState({\n          icon: this.weathericon.Rain\n        });\n        break;\n\n      case rangeID >= 600 && rangeID <= 622:\n        this.setState({\n          icon: this.weathericon.Snow\n        });\n        break;\n\n      case rangeID >= 701 && rangeID <= 781:\n        this.setState({\n          icon: this.weathericon.Atmosphere\n        });\n        break;\n\n      case rangeID === 800:\n        this.setState({\n          icon: this.weathericon.Clear\n        });\n        break;\n\n      case rangeID >= 801 && rangeID <= 804:\n        this.setState({\n          icon: this.weathericon.Clouds\n        });\n        break;\n\n      default:\n        this.setState({\n          icon: this.weathericon.Clouds\n        });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      loadweather: this.getWeather,\n      error: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Whether, {\n      city: this.state.city,\n      country: this.state.country,\n      temp_celsius: this.state.celsius,\n      temp_max: this.state.temp_max,\n      temp_min: this.state.temp_min,\n      description: this.state.description,\n      weathericon: this.state.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sam/Documents/Reactor/React1/NEW-WHETHER-APP/src/App.js"],"names":["React","Whether","Form","App","Component","constructor","getWeather","e","preventDefault","city","target","elements","value","country","api_call","fetch","response","json","console","log","setState","name","sys","celsius","calCelsius","main","temp","temp_max","temp_min","description","weather","error","get_WeatherIcon","weathericon","id","state","undefined","icon","ThunderStorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","cell","Math","floor","icons","rangeID","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport 'weather-icons/css/weather-icons.css';\nimport  'bootstrap/dist/css/bootstrap.min.css';\nimport Whether from './components/whether.component';\nimport Form from './components/form.component';\n\nclass App extends React.Component {   //else import {Component as well} to avoid React.Component\n\n    constructor(){\n      super();\n\n      this.state={\n        city:undefined,\n        country: undefined,\n        icon: undefined,\n        icon:undefined,\n        main: undefined,\n        celsius: undefined,\n        temp_max:undefined,\n        temp_min:undefined,\n        description: \"\",\n        error: false\n\n      };\n      \n\n      this.weathericon = {\n        ThunderStorm:\"wi-thunderstorm\",\n        Drizzle: \"wi-sleet\",\n        Rain: \"wi-storm-showers\",\n        Snow: \"wi-snow\",\n        Atmosphere: \"wi-fog\",\n        Clear: \"wi-day-sunny\",\n        Clouds:\"wi-day-fog\"\n\n      }\n    }\n\n    calCelsius(temp){\n      let cell=Math.floor(temp-273.15);\n      return cell;\n    }\n  \n  get_WeatherIcon(icons, rangeID) {\n    switch (true) {\n      case rangeID >= 200 && rangeID <= 232:\n        this.setState({ icon: this.weathericon.ThunderStorm });\n        break;\n      case rangeID >= 300 && rangeID <= 321:\n        this.setState({ icon: this.weathericon.Drizzle });\n      break;\n      case rangeID >= 500 && rangeID <= 531:\n        this.setState({ icon: this.weathericon.Rain });\n      break;\n      case rangeID >= 600 && rangeID <= 622:\n        this.setState({ icon: this.weathericon.Snow });\n        break;\n      case rangeID >= 701 && rangeID <= 781:\n        this.setState({ icon: this.weathericon.Atmosphere });\n        break;\n      case rangeID ===800:\n        this.setState({ icon: this.weathericon.Clear });\n        break;\n      case rangeID >= 801 && rangeID <= 804:\n        this.setState({ icon: this.weathericon.Clouds});\n        break;\n      default:\n        this.setState({ icon: this.weathericon.Clouds });\n      \n    }\n  }\n\n  getWeather = async (e) => {\n      \n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n\n    const api_call = await fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=${city},${country} &appid=c92ed0af42e526eeb37764db5d2d8a1d`\n    );\n      const response= await api_call.json();\n\n    if (city && country)\n    {\n      console.log(response);\n\n      this.setState({\n        city: `${response.name}, ${response.sys.country} `,\n        country: response.sys.country,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description,\n        error: false\n      });\n      this.get_WeatherIcon(this.weathericon, response.weather[0].id);  \n    }\n\n    else {\n      this.setState({ error: true });\n    }\n\n    };\n\n  render() { \n    return ( \n      <div className=\"App\">\n      <Form loadweather={this.getWeather} error={this.state.error} />\n      <Whether \n      city={this.state.city}\n      country={this.state.country} \n      temp_celsius={this.state.celsius} \n      temp_max={this.state.temp_max}\n      temp_min={this.state.temp_min}\n      description={this.state.description}\n      weathericon={this.state.icon}\n      \n      \n      />\n    </div>\n     );\n  }\n}\n \n\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}