{"ast":null,"code":"var _jsxFileName = \"/home/sam/Documents/Reactor/React1/NEW-WHETHER-APP/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Whether from './components/whether.component';\n\nclass App extends React.Component {\n  //else import {Component as well} to avoid React.Component\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      const api_call = await fetch('http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=c92ed0af42e526eeb37764db5d2d8a1d');\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description,\n        icon: this.weathericon.ThunderStorm\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeather();\n    this.weathericon = {\n      ThunderStorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Whether, {\n      city: this.state.city,\n      country: this.state.country,\n      temp_celsius: this.state.celsius,\n      temp_max: this.state.temp_max,\n      temp_min: this.state.temp_min,\n      description: this.state.description,\n      weathericon: this.state.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sam/Documents/Reactor/React1/NEW-WHETHER-APP/src/App.js"],"names":["React","Whether","App","Component","constructor","getWeather","api_call","fetch","response","json","console","log","setState","city","name","country","sys","celsius","calCelsius","main","temp","temp_max","temp_min","description","weather","icon","weathericon","ThunderStorm","state","undefined","error","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","cell","Math","floor","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAO,qCAAP;AACA,OAAQ,sCAAR;AACA,OAAOC,OAAP,MAAoB,gCAApB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAI;AAElCC,EAAAA,WAAW,GAAE;AACX;;AADW,SAmCbC,UAnCa,GAmCF,YAAS;AAClB,YAAMC,QAAQ,GAAE,MAAMC,KAAK,CAAC,mGAAD,CAA3B;AACA,YAAMC,QAAQ,GAAE,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,WAAKI,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEL,QAAQ,CAACM,IADH;AAEZC,QAAAA,OAAO,EAAEP,QAAQ,CAACQ,GAAT,CAAaD,OAFV;AAGZE,QAAAA,OAAO,EAAE,KAAKC,UAAL,CAAgBV,QAAQ,CAACW,IAAT,CAAcC,IAA9B,CAHG;AAIZC,QAAAA,QAAQ,EAAE,KAAKH,UAAL,CAAgBV,QAAQ,CAACW,IAAT,CAAcE,QAA9B,CAJE;AAKZC,QAAAA,QAAQ,EAAE,KAAKJ,UAAL,CAAgBV,QAAQ,CAACW,IAAT,CAAcG,QAA9B,CALE;AAMZC,QAAAA,WAAW,EAAEf,QAAQ,CAACgB,OAAT,CAAiB,CAAjB,EAAoBD,WANrB;AAOZE,QAAAA,IAAI,EAAG,KAAKC,WAAL,CAAiBC;AAPZ,OAAd;AAUD,KAnDY;;AAGX,SAAKC,KAAL,GAAW;AACTf,MAAAA,IAAI,EAACgB,SADI;AAETd,MAAAA,OAAO,EAAEc,SAFA;AAGTJ,MAAAA,IAAI,EAAEI,SAHG;AAITJ,MAAAA,IAAI,EAACI,SAJI;AAKTV,MAAAA,IAAI,EAAEU,SALG;AAMTZ,MAAAA,OAAO,EAAEY,SANA;AAOTR,MAAAA,QAAQ,EAACQ,SAPA;AAQTP,MAAAA,QAAQ,EAACO,SARA;AASTN,MAAAA,WAAW,EAAE,EATJ;AAUTO,MAAAA,KAAK,EAAE;AAVE,KAAX;AAaA,SAAKzB,UAAL;AAEA,SAAKqB,WAAL,GAAmB;AACjBC,MAAAA,YAAY,EAAC,iBADI;AAEjBI,MAAAA,OAAO,EAAE,UAFQ;AAGjBC,MAAAA,IAAI,EAAE,kBAHW;AAIjBC,MAAAA,IAAI,EAAE,SAJW;AAKjBC,MAAAA,UAAU,EAAE,QALK;AAMjBC,MAAAA,KAAK,EAAE,cANU;AAOjBC,MAAAA,MAAM,EAAC;AAPU,KAAnB;AAUD;;AAEDlB,EAAAA,UAAU,CAACE,IAAD,EAAM;AACd,QAAIiB,IAAI,GAACC,IAAI,CAACC,KAAL,CAAWnB,IAAI,GAAC,MAAhB,CAAT;AACA,WAAOiB,IAAP;AACD;;AAoBHG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,OAAD;AACA,MAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWf,IADjB;AAEA,MAAA,OAAO,EAAE,KAAKe,KAAL,CAAWb,OAFpB;AAGA,MAAA,YAAY,EAAE,KAAKa,KAAL,CAAWX,OAHzB;AAIA,MAAA,QAAQ,EAAE,KAAKW,KAAL,CAAWP,QAJrB;AAKA,MAAA,QAAQ,EAAE,KAAKO,KAAL,CAAWN,QALrB;AAMA,MAAA,WAAW,EAAE,KAAKM,KAAL,CAAWL,WANxB;AAOA,MAAA,WAAW,EAAE,KAAKK,KAAL,CAAWH,IAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF;AAeD;;AAvE+B;;AA0ElC,eAAevB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport 'weather-icons/css/weather-icons.css';\nimport  'bootstrap/dist/css/bootstrap.min.css';\nimport Whether from './components/whether.component'\n\nclass App extends React.Component {   //else import {Component as well} to avoid React.Component\n\n    constructor(){\n      super();\n\n      this.state={\n        city:undefined,\n        country: undefined,\n        icon: undefined,\n        icon:undefined,\n        main: undefined,\n        celsius: undefined,\n        temp_max:undefined,\n        temp_min:undefined,\n        description: \"\",\n        error: false\n\n      };\n      this.getWeather();\n\n      this.weathericon = {\n        ThunderStorm:\"wi-thunderstorm\",\n        Drizzle: \"wi-sleet\",\n        Rain: \"wi-storm-showers\",\n        Snow: \"wi-snow\",\n        Atmosphere: \"wi-fog\",\n        Clear: \"wi-day-sunny\",\n        Clouds:\"wi-day-fog\"\n\n      }\n    }\n\n    calCelsius(temp){\n      let cell=Math.floor(temp-273.15);\n      return cell;\n    }\n\n    getWeather=async()=>{\n      const api_call =await fetch('http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=c92ed0af42e526eeb37764db5d2d8a1d');\n      const response= await api_call.json();\n\n      console.log(response);\n\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description,\n        icon : this.weathericon.ThunderStorm\n      })\n\n    };\n\n  render() { \n    return ( \n      <div className=\"App\">\n      <Whether \n      city={this.state.city}\n      country={this.state.country} \n      temp_celsius={this.state.celsius} \n      temp_max={this.state.temp_max}\n      temp_min={this.state.temp_min}\n      description={this.state.description}\n      weathericon={this.state.icon}\n      \n      \n      />\n    </div>\n     );\n  }\n}\n \nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}