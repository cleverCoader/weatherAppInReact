{"ast":null,"code":"var _jsxFileName = \"/home/sam/Documents/Reactor/React1/NEW-WHETHER-APP/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Whether from './components/whether.component';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      const api_call = await fetch('http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=c92ed0af42e526eeb37764db5d2d8a1d');\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min)\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeather();\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Whether, {\n      city: this.state.city,\n      country: this.state.country,\n      temp_celsius: this.state.celsius,\n      temp_max: this.state.temp_max,\n      temp_min: this.state.temp_min,\n      description: this.state.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sam/Documents/Reactor/React1/NEW-WHETHER-APP/src/App.js"],"names":["React","Whether","App","Component","constructor","getWeather","api_call","fetch","response","json","console","log","setState","city","name","country","sys","celsius","calCelsius","main","temp","temp_max","temp_min","state","undefined","icon","description","error","cell","Math","floor","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAQ,sCAAR;AACA,OAAOC,OAAP,MAAoB,gCAApB;;AAIA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAE9BC,EAAAA,WAAW,GAAE;AACX;;AADW,SAuBbC,UAvBa,GAuBF,YAAS;AAClB,YAAMC,QAAQ,GAAE,MAAMC,KAAK,CAAC,mGAAD,CAA3B;AACA,YAAMC,QAAQ,GAAE,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,WAAKI,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEL,QAAQ,CAACM,IADH;AAEZC,QAAAA,OAAO,EAAEP,QAAQ,CAACQ,GAAT,CAAaD,OAFV;AAGZE,QAAAA,OAAO,EAAE,KAAKC,UAAL,CAAgBV,QAAQ,CAACW,IAAT,CAAcC,IAA9B,CAHG;AAIZC,QAAAA,QAAQ,EAAE,KAAKH,UAAL,CAAgBV,QAAQ,CAACW,IAAT,CAAcE,QAA9B,CAJE;AAKZC,QAAAA,QAAQ,EAAE,KAAKJ,UAAL,CAAgBV,QAAQ,CAACW,IAAT,CAAcG,QAA9B;AALE,OAAd;AASD,KAtCY;;AAGX,SAAKC,KAAL,GAAW;AACTV,MAAAA,IAAI,EAACW,SADI;AAETT,MAAAA,OAAO,EAAES,SAFA;AAGTC,MAAAA,IAAI,EAACD,SAHI;AAITL,MAAAA,IAAI,EAAEK,SAJG;AAKTP,MAAAA,OAAO,EAAEO,SALA;AAMTH,MAAAA,QAAQ,EAACG,SANA;AAOTF,MAAAA,QAAQ,EAACE,SAPA;AAQTE,MAAAA,WAAW,EAAE,EARJ;AASTC,MAAAA,KAAK,EAAE;AATE,KAAX;AAYA,SAAKtB,UAAL;AACD;;AAEDa,EAAAA,UAAU,CAACE,IAAD,EAAM;AACd,QAAIQ,IAAI,GAACC,IAAI,CAACC,KAAL,CAAWV,IAAI,GAAC,MAAhB,CAAT;AACA,WAAOQ,IAAP;AACD;;AAmBHG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,OAAD;AACA,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAWV,IADjB;AAEA,MAAA,OAAO,EAAE,KAAKU,KAAL,CAAWR,OAFpB;AAGA,MAAA,YAAY,EAAE,KAAKQ,KAAL,CAAWN,OAHzB;AAIA,MAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWF,QAJrB;AAKA,MAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWD,QALrB;AAMA,MAAA,WAAW,EAAE,KAAKC,KAAL,CAAWG,WANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF;AAaD;;AAxD+B;;AA2DlC,eAAexB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport  'bootstrap/dist/css/bootstrap.min.css';\nimport Whether from './components/whether.component'\n\n\n\nclass App extends React.Component {\n\n    constructor(){\n      super();\n\n      this.state={\n        city:undefined,\n        country: undefined,\n        icon:undefined,\n        main: undefined,\n        celsius: undefined,\n        temp_max:undefined,\n        temp_min:undefined,\n        description: \"\",\n        error: false\n\n      };\n      this.getWeather();\n    }\n\n    calCelsius(temp){\n      let cell=Math.floor(temp-273.15);\n      return cell;\n    }\n\n    getWeather=async()=>{\n      const api_call =await fetch('http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=c92ed0af42e526eeb37764db5d2d8a1d');\n      const response= await api_call.json();\n\n      console.log(response);\n\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min)\n\n      })\n\n    };\n\n  render() { \n    return ( \n      <div className=\"App\">\n      <Whether \n      city={this.state.city}\n      country={this.state.country} \n      temp_celsius={this.state.celsius} \n      temp_max={this.state.temp_max}\n      temp_min={this.state.temp_min}\n      description={this.state.description}\n      \n      />\n    </div>\n     );\n  }\n}\n \nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}